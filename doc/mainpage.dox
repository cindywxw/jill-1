/* -*- Mode:c++; c-file-style:"linux"; indent-tabs-mode:nil; -*- */

/**
@mainpage JILL

@section Introduction

JILL is a C++ programming framework for the JACK low-latency audio
toolkit (@ref http://jackaudio.org). JACK is a callback-based interface to
sound hardware that uses a plugin architecture. Plugins are standalone
programs that register callbacks with the JACK server, which are
called in a special real-time thread. A plugin can connect to input
and output ports. Many of the tasks a JACK program has to do are
rather stereotyped, so JILL provides a C++ framework that hides many
of these details.

@section Reference

From the application writer's perspective, the task is to create JACK
clients, specify how they will process data, and connect them to other
JACK ports.  This is covered in @ref clientgroup.  

In addition, JILL comes with classes to perform other common tasks:

  - @ref optionsgroup
  - @ref buffergroup
  - @ref iogroup
  - @ref miscgroup

@section Modules 

A number of applications, or modules, have been written to perform
common tasks.  Many complex operations can be performed with chains of
modules.  More information about the supplied modules:

  - @ref modulegroup

@section license Licence

Copyright (C) 2010 by C Daniel Meliza <dmeliza@uchicago.edu>

includes code from klick, Copyright (C) 2007-2009 Dominic Sacre
<dominic.sacre@gmx.de>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

*/
